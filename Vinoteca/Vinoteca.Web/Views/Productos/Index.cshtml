﻿@using PagedList.Mvc
@model PagedList.IPagedList<Vinoteca.Web.ViewModels.Producto.ProductoListVm>

@{
    ViewBag.Title = "Index";
}
    
<div class="d-flex justify-content-between w-95">
    <h2>Lista de Vinos</h2>
    <p>
        @Html.ActionLink("Nuevo", "Create", null, new { @class = "btn btn-primary" })
    </p>
</div>
<table class="border-0 table table-bordered table-hover table-dark w-100">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Variedad)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PrecioVenta)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Bodega)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Stock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Suspendido)
        </th>
        <th style="width:150px">
            @Html.DisplayNameFor(model => model.FirstOrDefault().Imagen)
        </th>
        <th style="width:220px">Acciones</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Variedad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioVenta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bodega)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Suspendido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imagen)
            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.ProductoId }, new { @class = "btn btn-sm btn btn-warning" }) |
                @Html.ActionLink("Detalles", "Details", new { id = item.ProductoId }, new { @class = "btn btn-sm btn btn-info" })|
                @Html.ActionLink("Borrar", "Delete", new { id = item.ProductoId }, new { @class = "btn btn-sm btn btn-danger" })
            </td>
        </tr>
    }

</table>
<div class="pagination-container">
    <div class="pagination-buttons">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, pageSize = ViewBag.PageSize })">Anterior</a>
                    </li>
                }
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, pageSize = ViewBag.PageSize })">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
